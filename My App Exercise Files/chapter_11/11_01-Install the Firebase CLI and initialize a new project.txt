Install the Firebase CLI and initialize a new project

- [Instructor] Firebase Hosting provides a fast and secure hosting for your web application. It allows to host static and dynamic content. It allows to deliver content fast and serve content over a secure connection. With one single command, Firebase Hosting will allow to quickly deploy web apps and serve both static and dynamic contents to a global CDN. CDN is short for Content Delivery Network. So let's see how it works. We're going to head to get started and find the instructions in order to get started with Firebase Hosting. So before you begin, you're going to first create a new Firebase project. So this is already done. So let's head to the Firebase console and you're going to make sure that you select the project that you have created and use for this demonstration. Mine is Firestock. So let's go back. And so the first step will be to install the CLI in order to get started with the Firebase Hosting. So let's find out how to proceed. We're going to run this line of command which is NPM install dash G to install globally followed by Firebase tools. So let me copy that to the clipboard. I'm going to copy this one and then let's go back. Step two will be to initialize any projects. And for that you're going to make sure that you are at the roots of your local project directory and you simply need to run Firebase init hosting. And you're going to follow the instructions, like in the terminal Firebase CLI will prompt you to first select a Firebase project. So the same that you have used for this demo. Then you're going to specify a directory to use as a public route directory. And from this directory you're going to deploy the entry points along with other assets. And this is what's going to be served publicly. During the process, it's going to generate other files like the Firebase json and that's going to be our configuration file. And this is where you're going to specify the public folder et cetera. And the final step, step three will be to deploy your sites. For that, we're going to run Firebase deploy dash dash only hosting, but you can skip this flag and just run hosting. So let's do that. Let's go back to our project. So you're going to make sure that you are at the roots of your local project. And we're going to run this to install the Firebase CLI. Once this is installed, you want to run npx Firebase login. So this will be one step before we actually allow to initialize in your projects. Let's do that. This will open a new window in your default browser. So I'm going to type yes, click enter. From here you're going to select an account to authenticate to log in. So this will be the same account that you use to connect on the Firebase console. In my case, I'm going to use my primary accounts. And then you just need to click allow. And when this is done, you're going to read Firebase CLI Log in successful. From here you can go back to your terminal so you can read that you have successfully logged in by using your account. So I'm using my primary Gmail account. Excellent. So next what we can do is then do Firebase init to initialize a new project. And we're going to follow the steps, the instructions in the terminal. We're going to select the services that we need to use for this project. So first we want to use the services of the Firestore, you know, to store and synchronize data, hosting of course, storage also that we use. And that's about it. So I'm going to select those three services and then click enter. Then we're going to select a project, an existing one, because we have already created one. So I'm going to select the first one which is Firestock in my case. So this is the name of my project. So make sure that you select the same name of the project that you have created in the Firebase console. Let's click enter and it's going to go through. And then we just need to confirm so the files that are generated. So I'm going to click enter. I'm going to click enter as well for this one. For the public directory, we could change, I'm going to leave it as public for now. Configure a single page app. I'm going to say yes. I'm going to say no for this one. I don't need to use any GitHub actions. I don't need to override, so I'm going to say no with N, capital N, I'm going to say yes for this one. And this is successfully initialized. We have a new project initialized and we can check out here the Firebase json. So this is our configuration file, excellent. So the next step will be to then generate a new build. I'm going to show you that next because this is going to be from this production build version of our single page application that we're going to serve and deploy our content to the Cloud.


sudo npm install -g firebase-tools

npx firebase login

npx firebase init

servises: Firestore, Hosting, Storage 