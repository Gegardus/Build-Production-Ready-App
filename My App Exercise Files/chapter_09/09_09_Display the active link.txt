Display the active link

- [Instructor] Now we can navigate between the multiple views of our single-page application. What would be nice also is to actually display which link is active. So when you are in this location, showing which link is active based on the current pathname. So, we're going to go back to this components Navbar and find the navigation. So this is where you have all the links. And just make sure that you have, here at the top, we're going to add this hook from the react-router library, useLocation. This one returns an object. And in this object, we're going to get the information of the pathname in order to give us the current location. And here we've been using for every link the same class, CSS, in order to display an active link. So actually, let's remove this one from the second link. You're going to see the difference. And here you can see that this one is slightly faint and this one is darker. So this is to display which link is active. So let's replace this. I'm just going to keep nav-link, and I'm going to use instead the curly braces because I'm going to combine with the backtick. So let's remove that. I'm going to combine JavaScript with static content. And I'm going to compare the current pathname with, here, the homepage. So this is the root URL. And we're going to use this syntax which is the ternary operator. So, if this matches. So if this evaluates the true we want to display this link as active, we're going to apply this active class name. Otherwise, it's going to be just nothing. So let's try also for, let's actually do the same for this other link. Right below, it's going to be showing if only this matches this pathname. Okay? If this is stockimages. Okay, so let's try that. So right now we are on the root URL, we're going to navigate to the stockimages. And here we go. So now it switches, you can see that this thing is active. Excellent. I'm going to do something else to finish which is to show. Also, actually, let me put that outside because I think it works better if this is taking the entire, like everything. Okay. No, I think I've got an extra parenthesis, so this is wrong. Let's go back. Okay. Here we go, that's better. And the last demo that I'd like to do is to add another link because we could also give the options to display also the Profile page from the main navigation. So that's going to be profile. I'm going to replace this with profile, not just this occurrence. Profile. Like this. It's going to be the same. So, first of all, it's going to give the user to navigate to account Profile page if they wish. And also it's going to display the profile link as active if the pathname matches. If it matches, it's going to be this one which is active. Excellent. So we have successfully set up a navigation and also allow the user to navigate between views. And we have also improved the user experience by adding also a not found page. And so they can navigate back to the homepage. Here we go. So more to come. Next, we want to set up this feature to allow the user to search for results and then display result based on a search. And also deploy this app to the cloud.