Create the routes for "NotFound" and "Profile"
Selecting transcript lines in this section will navigate to timestamp in the video
- [Instructor] Now we can successfully navigate between pages, but what we would like also is to improve the user experience by allowing the user to land on a page so they can read not found, something like that. And then they have the options to go back to the homepage. So let's do that. For your convenience as well, I am providing with code snippets. So this first one we're going to take, and we're going to do also this also, which is to create a page to read the user account information. So we're going to do that at the same time. So let's go inside the folder for the components and add a new component, not found. And paste, and this for the not found component. And while we are here, I'm going to create also another component which will be to display the user account information. So that's going to be profile .GS. And let's go back to the code snippets. Here as well, you're going to get this for free, so no need to write everything from scratch. And then right here we're going to paste. Okay, so let's take care of creating a new route for the not found components. And actually it's going to be special for this route because for this we don't need to specify any routes. Instead it's going to be a wild card like this. Let's add the component not found that we just created in the scope. Not found from components and then not found. And I think, yeah, it is already export. We export default correctly. And then we just need to specify right here, not found. Here we go. That's it. Let's try that right away. You're going to see that if I try to navigate to something that doesn't exist, for example, I don't know, for now we don't have any route for the profile. I'm going to land right here. Looks like you're lost. And then you have the options to go back. So let's implement that actually. If you go back, you're going to see that I have already provided with this navigate function which is provided by this react router hook. And we're going to add an un-click listener. And this is just like we did before. So we're going to allow the user to navigate back to the previous location. You just need to specify minus one. That's it. So now if you try, you can then go back to where you were previously or you could do something like this. Like for example, navigate to the homepage specifically. That's also a good option. So now we would like to like as we were trying to do is to display the profile page. So that is something that we could do by, you know, first let's go back to the nav bar component. Let's go here. You've got this dropdown where you can see like this. This is our name. So let's find the dropdown component, right here. And for the name, we're just going to make sure, okay so that's already in the scope. This link components that creates a anchor tag like a link so we can navigate. So I'm going to add this link and also specify the path name. So I'm going to define it as profile like this. And then I'm going to pass the username. So obviously we want to do that only if obviously there is a current user. Let's do like this. Otherwise let's display just the name if we're not connected, which will be like this. And it's not going to be, actually, it's going to be just as we had done before, which is, let's just put nothing, like it's not going to be visible if you're not connected, okay? There's no point. Okay, so let's try this. But before continuing we want to also create a new route for that as well. So let's do that. We're going to add to the scope. So this is going to be profile from here as well component. And we have already created this one. So this is going to be profile like this, and let's this profile like this. And instead it's going to be profile like this. Okay, so let's try, okay, here we go. So now this is working right away. And if we go back, and actually let's go back home and let's try this link that we have just created. Okay, this is working just fine. Let's go back to our profile. And you're going to see that I am already, this is already set up. So we get the information from our contact objects. And what you could do, really, this is up to you, you could then choose to display first your name. I think there is the username, I'm not sure like it's up to you afterwards. You could use this component, this page to display whichever information you'd like. Excellent. So we almost through. The last piece I'd like to do is to allow to display which link is active when navigate from the homepage or this view, for example.