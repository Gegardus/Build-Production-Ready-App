Set documents with images: Update the UI

- [Instructor] In the final parts with the cloud storage demonstration, we finally displayed the images in the stock image gallery. So the goal will be to first, upload the images to the cloud storage, and then download the URL to get the path to the image stored in the cloud storage. And finally, we displayed the images in the gallery. So far, so what we've had, I'm going to delete. So from the Cloud Firestore, I'm going to select from the middle, and select delete collection. And you're going to write the name of the current collection, then click delete because now, we have a document with a different shape and format. So we just want to start from scratch, from zero, and also we're going to do the same first storage. Like this folder, let's select and click delete. So let's start from zero. So let's go back to here. So if we go back to the App.js, the list, and then the card. We know that we have the information of the path and the title. And also, we are going to use another one which is createdAt because this is what we do when we write to a new documents to the store. We also specify this timestamp. Okay, so that's going to be auto-generated. So let's try that again. So let's make a test. Let's go back to our app, local host, and then we're going to add a few image. Let's select this one. So this one is going to be named la joconde from (speaking in foreign language) in Paris. And then, another one will be this one. And I'm going to name it geometry. And let's add one last one. This one, and I'm going to call it summer. And here we go. So now this is working perfect. If we go back to the storage, we can see that now we have a new directory with images, and also a few images stored with an image preview, and also new documents added to this collection of stocks. And we've got three properties, createdAt, the path and the title. So as we're here, so I'd like to use this opportunity also to make a few some front end development because you can see that we have different images of different shape and size. So let's go back to this card component. And I'm going to start by first create a new div. And I'd like to actually set, I'm going to use inline style. I'd like to set a fixed height, so at least it's going to be of the same height. So for example, this, and also the background image. So the background image, I'm going to choose to do this way because at least we're going to use the same container, and then display the image within this container as a background image. So we're going to mix this static content with the path to display the path. So we also need to specify background size, and this will be cover. Finally, we're going to also specify repeats. So we must also specify so we don't repeat the same image on this background. So that's going to be no-repeat for the value. Here we go. And I just delete this, and I think I am missing maybe one div, closing div, somewhere like this. Okay, so that's almost done. So actually, we are halfway through. I want to add also a title because we're using this title here, and I'm going to put it right below. And that's going to be an H5, one heading. And I'm going to do title, and also add some CSS to center it. And that's going to be in the center. What else I want to add? We want to add the information of the date. And actually for this, it's going to be special because let me do that from here. I'm going to write timestamp, and I'm going to use useMemo because for this, we want to return the date. It's going to be particular because the timestamp, this is actually an object. So we must format this object. So that's going to be first, I'm going to create at the top the first reference to the date by doing new date. And I'm going to pass createdAt. And you're going to have access to two properties with this createdAt. It's seconds that I'm going to multiply by a 1,000. And after that, I'm going to start by, already so you can see step-by-step how this works. I'm going to return this new date, and we're going to continue afterwards. I just want to show you what we're supposed to do here. It's going to return the date, which will be a long string like we want to format this of course. I'd rather use just this information. That's going to be enough to display in every card. So this is starting to look like better. I'd like to continue and finish this demo so we can display the information, so the title, the date but also, the username information. So I'm going to add a spot so we can afterwards also use the information, and display the information of the author of the image. And I think that's going to be like the final step. So let's continue next. 