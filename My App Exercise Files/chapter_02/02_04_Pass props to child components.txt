Pass props to child components

- [Instructor] React components use props to communicate with each other. Every parent component can pass data to a child component by using the props. Props are the same as attributes to HTML elements. For example below, we have this component Welcome with a prop to pass the data of Sara, the string object. And inside this component, we can then read and access this information via the props. So the goal in our example is to do the same, passing data from the parents to a child component, and then be able to read the information from the component, the child components. Because here the goal is not to read and repeat the same static content, we want to be able to display actual images in this gallery instead of just a placeholder image. So for this example, for your convenience, I am providing with a collection of placeholder images that I took from this website, picsum.photos. So we're going to copy this array. And back in the App.js component, we're going to replace here and paste at the top. And we're going to allow to iterate through this collection of photos. And here we're going to have for every element that we iterate through, we're going to have one information which is this placeholder image, this URL. And we're going to pass this as a prop. I'm going to name this one src. Here I go. And now from the Card components, we want to be able to display this information so I can proceed this way. You can either proceed like this, define props, and then like this for the src attribute. So this time, this is an actual HTML element with an src attribute. So we're going to use the value of this props, which is props.src. We're going to do the same for the alt attribute. That's another attribute for the image tag. And here you go. So now we're going to be able to display an image, a placeholder image, by taking the value of this prop that we pass to every Card component that we reuse for this layout. Here we go. So the purpose with React is not only to create reusable component, but also to create reusable and flexible components. With the props, we can go even further, such as customize more, pass data information, and even do conditional rendering. We do not only create reusable component with static content, we create flexible components. So this really is the key concept of React, composition with reusability and flexibility.