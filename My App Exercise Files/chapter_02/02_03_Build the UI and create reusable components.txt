Build the UI and create reusable components

- [Instructor] Let's take a moment to understand one key concept of React. React has a powerful model of composition which is to reuse components, create flexible, highly maintainable and customizable user interface. The concept of composition is to divide the UI into small independent units. The problem is that when you have big components, it can be difficult to read through and to maintain. So the solution is to divide the user interface into small units of reusable and flexible components in order to keep the code-base organized and improve performance. Let's see what composition may look like in graphics before jumping into the code. So it's just like pieces of Legos put together. The UI is built with multiple units and some reusable units. For example, for every image you want to display in the image gallery, we're going to use the same reusable component card. And for the nav bar that we have added into our layout, we can make out three different pieces. First, the navigation that we're going to use to allow users to navigate between views, we're going to use this one as a single unit. Then you have the Search component to filter results, and third, far right, you have the dropdown to display different options and allow the user to authenticate. So the goal is to keep the code simple, easy to read, and to avoid repetition. It's going to be like a construction game like Legos. We're going to create and use small different units in order to build the entire user interface. So let's try that in code. So back in our project, we're going to find the app which is the root component inside src. And you can see already that we have multiple lines of code, this is starting to be busy. And the bigger the app, so when your app is starting to grow, the more complex it's going to be. So you want to keep things simple and separate everything into small units. For example, if you collapse those two right here, you can see that we have two separate units. So we're going to instead cut this. And for your convenience, as part of this class, I am providing with code snippets, so you don't need to worry about writing all this code all by yourself. I'm going to copy this and we're going to simply paste, actually we're going to create a new directory. I'm going to name this one "components". Inside, you're going to find different components to build the UI. Right here we're going to paste, and in some places you can see that we should replace with class name which is specific to React. So I'm going to replace this right here. It should be className. Here we go, and now in order to make this one available, we make sure that we export default, and we're going to add this one in the scope of this module, so the app components NavBar, here we go. And we're going to do the same with another component, which is Card. We're going to use the Card components to display as a reusable component to display the image. And for your convenience as well, I am providing with a code snippets. So you simply need to copy from this JS file, and paste right here. Same, you're going to import, oh my bad, it should be components and then NavBar. And right here it's going to be Card from components Card, like so. And now we just need to refer to this component as a small unit. And inside here, so when we look through this one, we're going to instead do one liner and allow to iterate through one single components. It's going to be much more simple, and it's going to be Card. And that's it, let's try that. So, there's not going to be much change in the UI except that now we have a more simple code base with less lines of codes. And you're going to see as well, you're going to notice that there are some changes also in the nav bar, so that's going to start to look like the final template that we want for this web projects developments. And we're just going to make some adjustments for the Card because it should be inside a column for every card that we want to display. So I'm just going to add this. So what we do here is that instead of maintaining, we don't need to worry about the rest of the code base. Whenever you need to maintain one piece of the UI, you can go straight in the component and maintain. So we're going to add this utility CSS to create a column, and also this to add some space around every card. And that's it, here we go. So now we have a nice layout, but more importantly, what matters is that we can build the layout piece by piece with one component for one purpose, meaning that we have one component to maintain, to display the nav bar, so this is one function, and another one that we're going to reuse to display an image. So for every image we have in the gallery, we're going to use the same reusable components. The goal is to allow to scale and maintain easily and to build a solid foundation for our web application.