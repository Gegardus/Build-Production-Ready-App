Subscribe to the context changes and apply side effects in the UI

- [Instructor] To complete the search components, the goals are first to subscribe the components to the context object, the global state. Then update the UI with a new list when the search feature is active. So in order to do that, first I'd like to make a few updates right here, so inside the context object. So, meaning that here we're going to return a memoized value. We're going to do that with use Memo, which will allow to return a new value or a memoized value, based on whether there is any change in the list of dependency. So I'm going to pass this as a dependency. And we're going to return the same right here. And also allow to return filter items, like this. And I'm going to add this as a dependency. There we go. And I'm going to pass this memoized value as the global object, global state. So now let's go back to the nav bar components. I'm going to find my nav bar component. And this is right here that I'm going to allow to subscribe to the context. Let's just make sure that we add this to the scope. And this will be from context and then fire store context. And we are going to use as well this custom hook, which is used for our store context. And this one will return, so let me put this right here. It's going to return filter items, and I'm just going to name this one filter, okay? Right here. And basically we're going to allow to do the search, while the user is typing. So let's do that with filter, and plus e target value. And we're going to do the same also, allow to search also when we hit the search button. We're going to pass then this local state, which is text. So let's try that. We're going to try to search for la joconde for example. You see that when I mistype there is no result, because nothing matches this term, which is jc. We're going to try to search for la joconde, which is working fine. If I reset, it's going to go back to the original list. Let's try also for flowers. There we go. So now we can return. So whichever matches this result, so what we type, matches this result. And if I go back, like this, it's going to return the original list. Perfect. Good job on this task and the project. Now we want to take this one step further. And the final step will be to make this single page application available online.