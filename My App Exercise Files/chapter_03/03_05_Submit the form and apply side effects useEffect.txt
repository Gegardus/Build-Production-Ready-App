Submit the form and apply side effects: useEffect

- [Instructor] So far, we've been using placeholder images to do the demonstration. So now, we want to upload actual images. And as part of this class, we are providing as well a collection of images that you can use for free for the next demonstrations. So let's go back to the source code. And we want to update the way that we manage the form to get the data. So first, we want to update with the title, then the file that we upload, and also create a path so we can display our preview. So we're going to change here so the way that we handle the inputs with an S. So make sure that you change to inputs. And then here, I'm going to update first with the information of the title, then the file, and that's going to be handled differently because we want to access the data of the files. And we make sure to get the first element because this is an array. Next, we create a path so we can display a preview. So that's going to be with this global class, which is URL, and we use createObjectURL. And as a parameter, we're going to pass the information of e.target.files. Here as well, we're going to make sure to provide with the first elements. So we're going to make a test. We're going to make sure that I open the developer tools, components. And it's going to stop because here, it cannot read properties from new. And that is because it's trying to get the information of a file that doesn't exist. So let's take a look at the upload form. You're going to see that here we have two inputs. A first one of type text with the name title, and another one of type file, with the name file. So it needs to be handled differently. So for that, we're going to use some control flow. I'm going to add an if statement, and first check if the name of the input equals to file. So if this is the case, we're going to then update first the information of the file and the path, and then update with the current states for the rest of the inputs. And if it's false, I'm going to only update the information of the title. And first, I'm going to update with the current states. We only going to change the information of the title with e.target.value. Here we go. So this time, you're going to see that we're going to be able to get the information first of the title, and then next, of the file. And I'm going to make sure to open also the React developer tools. You're going to see that now we have the state that has changed. We've got a name for the title, and also the information of the file. So what's left to do is to then updates right here so we can add to the gallery. So now, we are updating with an object, so we must make sure to make a reference to the path. So this is what we're doing here. So when we submit the form, we're going to add the path to the collection. So let's do that again. Save change. And now, you can see that we have a new images. Let's try with another image. New. And here you go. So next, we want to apply some side effects, and we're going to do that with this hook, use effects. So I'm going to add this right here, useEffect. This one takes two parameters. First, a callback function and a list of dependencies. And the useEffect hook allows to apply some side effects when there is a change in the state of the list of dependencies. And what we would like to do, I'm going to add for this purpose new local variables to display accounts of images. We're going to display a message, allowing to read the number of items that we have in the collection. So we're going to update with set counts, but before that, what I'm going to do is maybe to add somewhere the count. I'm going to use the backtick because I want to mix some static content with local variables. We're going to read, you have items.length, images. And here, we want to make sure that we display singular or plural, depending on the number of items that you have. So we're going to check first if the item's length is more than one, and then add an S or leave empty if this is less than one. And this should be a return operator like this. So we should read the message that you have six images for now, and we're going to make the test with just one element, and you're going to see the difference. So first, it's going to be singular. Okay? You have one image, and we're going to add another one. So new image. We're going to upload from here, and then we're going to save change. And now, you can read that you have two images, and now this is plural. So we've been able to successfully upload to the image gallery, and also to apply some side effects after that. So that would be nice to add some validation to this form. For example, if you have information missing in the form, we should not allow to add any element to the image gallery. So we're going to do that with the introduction of another hook, which is useMemo. We're going to see that next.