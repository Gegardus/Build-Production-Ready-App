Learn to add and manage data

- To add data into the Cloud Firestore you have different ways and options. So first, you could set the documents within a collection by explicitly specifying a document identifier. So that's one way to do it. We're going to go to the console. So first let's go to our projects and from here we're going to select fire store database. So from the shortcuts on the left. Then from here you see that you have the options to start a new collection. So I'm going to name this one stocks because that's going to be the name of our future collection, like image Stocks. And then we click Next. And from here you can then set your document which is adjust on format. You can see that this is a collection of key value pair like field and Value. So we could write first and then select the data type. So I'm going to leave it as string. I'm going to write Anna. Then you can select another field and then we can add last for the second field. And then I'm going to write Doe. And then you have the options to auto-generate the unique identifier. So I'm going to click auto ID and then you can click save. And here you go. So now you have a new document inserted into your new collection stocks. So that's one way to do it, but actually what we want to do is to do it programmatically from our application. So the way it works, and we're going to go to the documentations for that to find out. So how to proceed and set a new documents. So the way collections and documents work is that they are created implicitly in the cloud fire store. So you don't need to create a space like creating a new table for traditional SQL database, for example. Instead, we simply assign data to a document within a collection. And if the collection or the document does not exist Cloud Firestore takes care of creating it behind the scene. So this is a very simple process and we'll see that in action. So first I'm showing you the documentation in order to set a new document. So make sure that you select the web version because you have different SDKs depending on the type of application that you build. So in our case, it's going to be a web application. So we select the web and version nine because this is now version nine of Firebase. And to set a new document, we're going to use this method from the Firebase SDK. So we're going to make sure to add this to the scope of our new module. Then we can set the documents. So you see that this is asynchronous, so that's going to be a sync wait. And in parameter you're going to specify an instance of the database, the name of our collection, then the unique identifier followed by the documents that you want to set. And this is going to be a collection, a set of key value pairs. So first what you do is defining a reference and then set the document. So we're going to proceed the same way. So back in the code editor we're going to use our exercise files again, inside the SRC directory, I'm going to create a new directory that I'm going to name handlers. This is where I'm going to keep all my handler functions in order to handle functions with the Firebase SDK. starting with the Firestore. So I'm going to create a new file Firestore GS Inside I'm going to import all the methods that I need from the Firebase SDK. So that's going to be from Firebase Firestore. Like so. First we take get Fire Store. So we import this one and then set doc. And also we add to the scope the Firebase object that we have defined and configured. Remember, this is going to be, you're going to find it inside Lib and then Firebase config like so. So below I can then create an instance of the database. This will be with Get Fire Store. And we pass as a parameter app, which is the Firebase object. So we know that now we have the database that's which is up and running. We'll check that later. But for now, I'm going to create an object where I'm going to keep all the functions for the Firebase to first write. That's going to be write doc. And this one is going to take several arguments. So I'm going to write this way with a spread operator. And because this is going to be asynchronous I'm going to return in your premise and I'm going to resolve. And because this is a sync wait, we're going to also wrap all of it within a try-catch, just to catch any error, because in the case there is any issue with the network request. So that's it for now. So we're going to leave it as is and we're going to continue next. In the next video, we're going to set up the rest of this function in order to allow to set a new document. So I'm going to show you that next we're going to proceed the same way. We're going to continue to use the documentations to then allow to write and set a new document into the Cloud Fire Store database.