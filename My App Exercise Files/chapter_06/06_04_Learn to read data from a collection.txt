Learn to read data from a collection

- [Instructor] Now, we want to read from the collection, so the data that we have stored in the database. So, we had made a first test at the beginning, very beginning, that we're going to delete because it's not going to be of this shape. We're going to go ahead and select from the right, delete document and then click, start delete. Here we go, we're going to keep this one. So that's going to be of this type. We're going to get data of type, date and time and also the information of the path and then a title for the image. So let's go to the documentation and find the sections to learn to read data and then get data. So first what we want to do is to call on methods to get the data once and then we want to set a listener to receive data change events. So that's not, but this is optional. So instead, what we're going to do is very simple. We're going to get first this method, available from the same SDK. Then we're going to create a reference, specify the database, the name of the collection, then use this method in order to return a result of data of type snapshots, so that's not something we're going to be able to use because this is a specific type, data type, from Firebase. Instead, we're going to get the data from every snapshot that we get back after reading from the Cloud Firestore, so let's do that. Back in the source code, we're going to write a new function. I'm going to put it first right here. That's going to be around the same signature. So that's going to return. We're going to have arguments. And that's going to return also a promise, so that's going to be also asynchronous. New promise, we're going to resolve. And because it's going to be asynchronous we must not forget async. We're going to wrap this within a try and catch also and catch any errors if there's any with the network request, like so. And what we want is to first create a reference. So I'm going to put that outside of the promise, right here. So we want to first create here an array because we're going to need to transform like the sets of collections. So the collection that we get back from Firebase. So we're going to insert our actual documents inside this array. Next, we create a reference to the database. We're going to do that with another built-in function, which is collection. That's going to be collection, then we specify DB and also the name of the collection which is stocks, in our example. Finally, we're going to get back, so the documents and we're going to do that with get docs. So that's another method that we add to the scope which is get docs and we're going to name, so whatever we get back from Firebase, we're going to name it snapshots and that's going to be await get docs, and we pass as a parameter, the reference to the database. Next, we want to make an iteration on this snapshot. So I'm going to be doing that with for each and every document that we return, we want to transform it. And that's going to be new doc. No, actually I'm just going to do doc, actually it's going to conflict with what we have here. So I'm going to do this and then I'm going to use the spread operator to get all the fields, like the collection of value pairs. And then I think that's about it. So we're going to get this and then push this new document. So let's see how it works. Actually, for now we're just going to resolve and return the docs. And basically we would like to do that from our components. So, let me do that from app right here. So just as a test. So we kept use effects because we're going to read. So as soon as we start the app, we want to read from the database and we must also like upload. We're going to make a reference to this module. I'm going to put that right here. And this one is going to be read docs. Let's just make sure that we can actually, yeah that should be read docs. And because this is asynchronous, we must do like so, console log like this. I think we should be all set. Let's try this. So normally the app is up and running, here, so the only mistake I've made is because we're not actually outside so we should just import it like this. So you should actually have, it's in the same route. Let's go back, we open the console. In the console we can see that now we have an array with just one document. So this is working just fine. So what's left to do is to actually allow to display the collection of images and documents, data that we get back from the Firestore and then display in our gallery. So let's look at that in a next video.