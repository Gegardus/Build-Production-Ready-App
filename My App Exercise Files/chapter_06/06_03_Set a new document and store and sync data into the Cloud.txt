Set a new document and store and sync data into the Cloud Firestore

- [Instructor] To create a new document, we're going to follow the documentation here. So basically what you need to do is to create a reference with the instance of the database, specify the name of the collection, then an index, and then you're going to use this built-in function method provided by the SDK to specify your new documents. So let's copy those two lines and we're going to do the same in our firestore module. We just need to adapt to our needs because here the goal is to set a new documents for any new upload of images. So I'm going to name this one docRef, and here I'm going to specify stocks for the name of the collection. And here I'm going to use a random index, randomIndex, I'm going to do that with JavaScript Math.floor, and that's going to be Math.random. And I'm going to allow to generate from a very large number like so. And here I'm going to replace with, I'm going to use the back tick because it needs to be of string type. And then I'm going to pass random index, that's it. And here, we're not going to be using this. I'm going to remove it. It's going to be where we specify our documents, okay? So I'm just going to, let's say that you have multiple fields. We could write like, key; and then here specify your documents. So we're going to use whatever we pass as arguments right here. So that's going to be returned in a shape of an array. So that's going to be the inputs. So that's going to be actually the user inputs from the form that we use to upload and use stock image. And optional, we're going to use also the name of the collection. So let's say that you'd want to use multiple collection for your cloud fire store. So you'd want to specify it specifically. So I'm still going to use it statically like this. And before moving forward, I'm going to make a few changes because we want to make sure that some errors with Firebase. So we want to make sure that this is initialized before using any service of firebase. So I'm going to change this in order to actually use this from the firebase config. So let me move this to the config right here. I'm going to move this to here. I'm going to import this from the firebase config as well. Just this and allow to export also db. And finally, I'm going to import it from, actually from here. And I'm going to change also, so so far we had been doing this test, so we don't need to do that anymore. That was just for testing. Let's remove this and I think we should be all set. Excellent. So now we can continue. So now the goal is to then allow to set to set a new documents. So let's do that from the upload form. Remember that is where we're going to then allow to submit a new stock image. And then we're going to be able to send, to set a new document and then store the data in the cloud first, so let me just make sure that we make everything right. So remember that this is asynchronous so it needs to be async and then await. And we're going to take the information from so we're just going to be doing that on one line. We're going to take that from the parameter like this with inputs, and we're going to set the date as well for that. There is one convenient built in function which is serverTimestamp that's going to allow to generate, auto generate new data of type, date and time. So we're going to use that as well to to set the date and time. So every time that you send new data. And finally we're going to resolve and we're going to write something like, "new doc successfully inserted." Let's try that. I think it's all right. So let's go back to now the upload forms to where we're going to import Firestore. Here we go. And we're going to use from Firestore, writeDoc. And this is where it will, under submit that you're going to use writeDoc and we're going to pass inputs. Okay, so that's going to be from the user inputs. So optional, you're going to specify the name of the collection. And because this is returning a promise we're going to from here, console.log. Okay, so we should be fine. We are resolving. In doc, oh, we are missing something in Firestore, which is to add to the Scope Doc because we're using it right here, line 11. Let's go back. So let's make a try. I'm going to do new image, add a new image, and then save. And let me actually go back because we've been using the Spread Operator. So we're going to need to specifically do title. So I'm going to create this, and that's going to be input title and then the path also of the image. So that's going to be inputs.path. And let's try again. We're going to give it another try, add another image. We're going to upload and then click Save changes. And here we go. So now you can renew Doc, successfully inserted. So now you can find your new document with the path title and created ads. So now you need to know that you need to specifically specify the field and value to create your new documents. Perfect. So now we have successfully created a new database, store, and synchronize data. Now we want to be able to read, collect the same data, so from the database from here, in order to add it and display in our image gallery. So let's do that next.